{"version":3,"file":"ar-button.js","sourceRoot":"","sources":["../src/ar-button.ts"],"names":[],"mappings":"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","sourcesContent":["import {html, css, LitElement} from 'lit';\nimport {customElement, property, state} from 'lit/decorators.js';\n\n@customElement('ar-button')\nexport class ArButton extends LitElement {\n    static styles = css`\n        .ar-button {\n            display: inline-block;\n            font-family: var(--font-family, Avenir, Helvetica, Arial, sans-serif);\n        }\n        \n        .ar-button > .ar-link {\n            background-color: var(--background-color, #074e68);\n            color: var(--color, #ffffff);\n            text-decoration: var(--text-decoration, none);\n            border: var(--border, none);\n            border-radius: var(--border-radius, 8px);\n            padding: var(--padding, 8px 16px);\n            display: inline-flex;\n            align-items: center;\n\n            transition: background-color 0.2s ease;\n        }\n\n        .hidden {\n            display: none !important;\n        }\n\n        .ar-button-modal {\n            position: fixed;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n            z-index: 9999;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            background-color: rgba(0, 0, 0, 0.3);\n            padding: 10px;\n\n            transition: .3s opacity ease;\n            opacity: 1;\n        }\n        \n        .ar-button-modal .modal-inner {\n            display: flex;\n            flex-direction: column;\n            border-radius: 1em;\n            background: #ffffff;\n            box-shadow: 1px 1px 20px 1px #838383;\n            overflow-x: auto;\n            /*flex: 1;\n            max-width: 520px;*/\n        }\n        \n        .ar-button-modal .ar-modal-header {\n            display: flex;\n            justify-content: flex-end;\n            padding: 15px;\n        }\n        \n        .ar-button-modal .button-close {\n            border: none;\n            font-size: 38px;\n            cursor: pointer;\n            color: #a99fa4;\n            background: transparent;\n            font-weight: normal;\n            margin: 0;\n            padding: 0;\n        }\n        \n        .ar-button-modal .button-close:focus {\n            outline: none;\n        }\n        \n        .ar-button-modal .ar-modal-body {\n            position: relative;\n            margin: 20px 60px;\n        }\n        \n        .ar-button-modal .ar-modal-footer {\n            color: #000000;\n            border-top: 1px solid #888888;\n            display: inline-flex;\n            flex-direction: column;\n            align-items: center;\n        }\n        \n        @media (-webkit-min-device-pixel-ratio: 2) {\n            .ar-button-modal .ar-modal-footer {\n                border-top: 0.5px solid #888888;\n            }\n        }\n        \n        .ar-button-modal .ar-modal-footer a {\n            color: inherit;\n            text-decoration: none;\n        }\n        \n        .ar-button-modal .ar-modal-footer img {\n            position: relative;\n            top: 2px;\n            margin: 0 4px;\n            height: 16px;\n        }\n        \n        .ar-button-modal .ar-modal-footer p {\n            font-family: var(--font-family, Avenir, Helvetica, Arial, sans-serif);\n            font-size: 16px;\n            margin: 0;\n            padding: 16px 0;\n        }\n        .ar-button {\n            display: inline-block;\n            font-family: var(--font-family, Avenir, Helvetica, Arial, sans-serif);\n        }\n        \n        .ar-button > .ar-link {\n            background-color: var(--background-color, #074e68);\n            color: var(--color, #ffffff);\n            text-decoration: var(--text-decoration, none);\n            border: var(--border, none);\n            border-radius: var(--border-radius, 8px);\n            padding: var(--padding, 8px 16px);\n            display: inline-flex;\n            align-items: center;\n        }\n        \n        .ar-button .ar-icon {\n            width: var(--ar-icon-height, 30px);\n            height: var(--ar-icon-height, 30px);\n            margin-right: 4px;\n        }\n        \n        .ar-button .ar-icon-path {\n            fill: var(--color, #ffffff);\n        }\n        \n        .qr-canvas {\n            display: block;\n        }\n        \n        .qr-element {\n            display: flex;\n            justify-content: center;\n            align-content: center;\n            padding: 12px;\n            background: var(--qr-code-border-color, #074e68);\n        }\n        \n        .qr-element img {\n            display: block;\n        }\n        \n        .ar-modal-header h2 {\n            margin: 0;\n            padding: 15px 10px 10px 10px;\n        }\n        \n        .ar-modal-content {\n            color: #000000;\n            text-align: left;\n        }\n        \n        h2.ar-modal-content {\n            font-family: var(--font-family, Avenir, Helvetica, Arial, sans-serif);\n            font-size: 24px;\n            margin: 0;\n            padding: 20px 0;\n        }\n        \n        p.ar-modal-content {\n            font-family: var(--font-family, Avenir, Helvetica, Arial, sans-serif);\n            font-size: 16px;\n            margin: 0;\n            padding: 0 0 16px 0;\n        }\n    `;\n\n    @property()\n    model = 'chair';\n\n    @property()\n    qrTitle = 'Default Btn Text';\n\n    @property()\n    qrText = 'Default QR Title';\n\n    @property()\n    buttonText = 'Default QR Text';\n\n    baseUrl = 'https://dev.yago.cloud';\n\n    modelLink = '';\n\n    config = {\n        site_url: null,\n        quicklook_link: null,\n        qr_config: null,\n        ar_button_config: null,\n    };\n\n    @state()\n    showQrCode = false;\n\n    @state()\n    showButton = false;\n\n    modalHtml = `\n        <div class=\"ar-button-modal ${this.showQrCode ? '' : 'hidden'}\">\n            <div class=\"modal-inner\" role=\"dialog\">  \n            <div class=\"ar-modal-header\">\n            <h2 class=\"ar-modal-content\">${this.qrTitle}</h2>\n            <button type=\"button\" class=\"button-close\" @click=\"${this.closeModalWindow}\">âœ•</button>\n            </div>\n            <section class=\"ar-modal-body\">\n            <div class=\"qr-element\"></div>\n            <p class=\"ar-modal-content\" :style=\"{ width: qrSize + 'px' }\">\n                ${this.qrText}\n            </p>\n            </section>\n            <div class=\"ar-modal-footer\">\n            <p>\n                Powered by\n                <a href=\"https://yago.cloud/\">\n                Yago\n                <img src=\"https://yago.cloud/static/yago/img/yago_icon.png\" />\n                </a>\n            </p>\n            </div>\n            </div>\n        </div>\n    `;\n\n    render() {\n        return html`\n        <div\n            id=\"${this.elementId}\" \n            class=\"ar-button ${!this.showButton ? 'hidden' : ''}\">\n            \n            <a\n                rel=\"ar\"\n                href=\"${this.modelLink}\"\n                @click=${this.startAr}\n                class=\"ar-link external\">\n                    <!-- image tag as first child is required for iOS -->\n                    <img />\n                    <!-- ToDo: AR Icon Component -->\n                    ${this.buttonText}\n            </a>\n            ${html`${this.modalHtml}`}\n        </div>\n        `;\n    }\n\n    async connectedCallback() {\n        super.connectedCallback();\n        \n        // Fetch config from yago server and update when ready\n        this.config = await this.getConfig();\n        console.log(this.config)\n\n        this.showButton = true;\n    }\n\n    startAr(e: Event) {\n        e.preventDefault();\n        this.showQrCode = true;\n    }\n    \n    closeModalWindow() {\n        this.showQrCode = false;\n    }\n    \n    async getConfig() {\n        const url = `${this.baseUrl}/api/models/${this.model}/embed/options/`;\n        \n        try {\n            const configResponse = await fetch(url);\n            if (!configResponse.ok) throw configResponse;\n            return await configResponse.json();\n        } catch (e) {\n            // Fallback to fixed scaling\n            return this.config;\n        }\n    }\n      \n    get elementId() {\n    return 'ar-button-' + this.model; \n    }\n}\n"]}